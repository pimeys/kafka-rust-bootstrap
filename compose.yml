services:
  # Format storage for unified kafka
  kafka-format:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-format
    command: |
      bash -c "
        kafka-storage format --config /tmp/server.properties --cluster-id test-kafka-cluster-unified --ignore-formatted || exit 0
      "
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./kraft-configs/kafka-unified.properties:/tmp/server.properties:ro
    restart: "no"

  # Unified Kafka broker supporting multiple authentication methods (KRaft mode)
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-unified
    depends_on:
      kafka-format:
        condition: service_completed_successfully
    ports:
      - "9092:9092"  # PLAINTEXT (no auth)
      - "9093:9093"  # SASL_PLAINTEXT (SASL/PLAIN)
      - "9094:9094"  # SASL_PLAINTEXT (SASL/SCRAM)
      - "9095:9095"  # SSL (TLS only)
      - "9096:9096"  # SSL (mTLS)
    environment:
      CLUSTER_ID: "test-kafka-cluster-unified"
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-unified:29091
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      
      # Multiple listeners for different auth methods
      KAFKA_LISTENERS: >-
        PLAINTEXT://kafka-unified:29092,
        PLAINTEXT_HOST://0.0.0.0:9092,
        SASL_PLAINTEXT://kafka-unified:29093,
        SASL_PLAINTEXT_HOST_PLAIN://0.0.0.0:9093,
        SASL_PLAINTEXT_HOST_SCRAM://0.0.0.0:9094,
        SSL_HOST_TLS://0.0.0.0:9095,
        SSL_HOST_MTLS://0.0.0.0:9096,
        CONTROLLER://kafka-unified:29091
      
      KAFKA_ADVERTISED_LISTENERS: >-
        PLAINTEXT://kafka-unified:29092,
        PLAINTEXT_HOST://localhost:9092,
        SASL_PLAINTEXT://kafka-unified:29093,
        SASL_PLAINTEXT_HOST_PLAIN://localhost:9093,
        SASL_PLAINTEXT_HOST_SCRAM://localhost:9094,
        SSL_HOST_TLS://localhost:9095,
        SSL_HOST_MTLS://localhost:9096
      
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        PLAINTEXT:PLAINTEXT,
        PLAINTEXT_HOST:PLAINTEXT,
        SASL_PLAINTEXT:SASL_PLAINTEXT,
        SASL_PLAINTEXT_HOST_PLAIN:SASL_PLAINTEXT,
        SASL_PLAINTEXT_HOST_SCRAM:SASL_PLAINTEXT,
        SSL_HOST_TLS:SSL,
        SSL_HOST_MTLS:SSL,
        CONTROLLER:PLAINTEXT
      
      # SASL Configuration
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_HOST_PLAIN_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_HOST_SCRAM_SASL_ENABLED_MECHANISMS: SCRAM-SHA-512
      KAFKA_LISTENER_NAME_SASL_PLAINTEXT_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      
      # SSL Configuration for TLS and mTLS listeners
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: keystorepassword
      KAFKA_SSL_KEY_PASSWORD: keystorepassword
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: truststorepassword
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      
      # Different SSL client auth for TLS vs mTLS listeners
      KAFKA_LISTENER_NAME_SSL_HOST_TLS_SSL_CLIENT_AUTH: none
      KAFKA_LISTENER_NAME_SSL_HOST_MTLS_SSL_CLIENT_AUTH: required
      
      # Standard Kafka settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 4
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf
        -Dcom.sun.net.ssl.checkRevocation=false
        -Dtrust_all_cert=true
        -Dssl.TrustManagerFactory.algorithm=SunX509
    volumes:
      - kafka_data:/var/lib/kafka/data
      - ./config/kafka_server_jaas_unified.conf:/etc/kafka/kafka_server_jaas.conf
      - ./config/ssl:/etc/kafka/secrets
    restart: unless-stopped
    healthcheck:
      test: |
        nc -z localhost 9092 && 
        nc -z localhost 9093 && 
        nc -z localhost 9094 && 
        nc -z localhost 9095 && 
        nc -z localhost 9096 || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  # Create SCRAM users
  kafka-scram-users:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-scram-users
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 30 &&
        echo 'Creating SCRAM users using PLAIN authentication...' &&
        kafka-configs --bootstrap-server localhost:9093 --command-config /tmp/admin_client.properties --alter --add-config 'SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin &&
        kafka-configs --bootstrap-server localhost:9093 --command-config /tmp/admin_client.properties --alter --add-config 'SCRAM-SHA-512=[password=testuser-secret]' --entity-type users --entity-name testuser &&
        echo 'SCRAM users created successfully'
      "
    volumes:
      - ./config/kafka_admin_client_plain.conf:/tmp/admin_client.properties
    network_mode: "service:kafka"
    restart: "no"

  # Topic creation for all authentication methods
  kafka-topics:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-topics
    depends_on:
      kafka-scram-users:
        condition: service_completed_successfully
    command: |
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 30 &&
        echo 'Creating topics for all authentication methods...' &&
        
        # Create topic using PLAINTEXT
        kafka-topics --bootstrap-server localhost:9092 --create --topic test-topic-1 --partitions 4 --replication-factor 1 --if-not-exists &&
        echo 'Topic created for PLAINTEXT (port 9092)' &&
        
        # Verify topic creation for SASL/PLAIN
        kafka-topics --bootstrap-server localhost:9093 --list --command-config /tmp/sasl_plain_client.properties &&
        echo 'Topic verified for SASL/PLAIN (port 9093)' &&
        
        # Verify topic creation for SASL/SCRAM
        kafka-topics --bootstrap-server localhost:9094 --list --command-config /tmp/sasl_scram_client.properties &&
        echo 'Topic verified for SASL/SCRAM (port 9094)' &&
        
        # Verify topic creation for TLS (using internal plaintext)
        kafka-topics --bootstrap-server kafka-unified:29092 --list &&
        echo 'Topic verified for TLS and mTLS (ports 9095, 9096)' &&
        
        echo 'All topic operations completed successfully'
      "
    volumes:
      - ./config/kafka_client_jaas_plain.conf:/tmp/sasl_plain_client.properties
      - ./config/kafka_client_jaas_scram.conf:/tmp/sasl_scram_client.properties
    network_mode: "service:kafka"
    restart: "no"

volumes:
  kafka_data:
    driver: local